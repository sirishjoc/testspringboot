buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 


jar {
    baseName = 'Plastic'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
	mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test') 	
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile 'org.mongodb:mongo-java-driver:3.0.4'
	compile 'org.json:json:20151123'
	compile 'org.apache.httpcomponents:httpclient:4.1.1'
	compile 'org.jsoup:jsoup:1.8.1'
	compile 'com.google.code.gson:gson:1.7.2'
	compile 'org.elasticsearch:elasticsearch:1.0.0'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

configurations.all {
        all*.exclude group: 'commons-logging'
}

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
   sourceSets.main.java.srcDir "src/main/config"
}


test {
	useTestNG()
}

springBoot {
  mainClass = "com.testspringboot.main.ApplicationBoot"
}
